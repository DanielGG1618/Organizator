<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>