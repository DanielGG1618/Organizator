<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IT7aJgDXM//bceXn53bOzONdngnsdAR4Of78/PyOud/1LWwRgOvZyAM/Km52eR6wRQDm/j0/lGyx88sD
        cP3Cz0c+1Dy87v5SywMw95/3QtHy3d8hAM7+VC3ffQGAdZbv/g4BABYRAAgTAAgTAAgTAAgTAAgTAAgT
        AAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgT
        AAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgT
        AAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgT
        AAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgT
        AAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgT
        AAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgT
        AAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgT
        AAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAjbIQB3qweA
        RZbvvgDAOst3f4cA3K4eABZZvvvLA3Acx7uZeb96DvjO3l93f6nlAbh6tXoA+M622PkHl8tl9QwzM3Oe
        558zc7N6DvgO7o7j+H31EDP73AHMzLyYmXP1EPCNnXO/61vYJgDHcXyYmeer54Bv7Pl117ewTQBmZo7j
        uJ2N6ghf2Yvrjm9jqwDMzBzH8WZmno3jAD+Pc2aeXXd7K9sFYObvO4HHs8GHEvA/3c3M492u/B9t8xbg
        v5zn+XRm/piZh6tngS/wfmZe7XjV/6ftA/DReZ6PZubJ3L8q9LqQHd1df7c7fOTzOX6YAABf35bPAIDv
        QwAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAg
        TAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAg7C/v0IdDxhBcHQAAAABJRU5ErkJggg==
</value>
  </data>
</root>